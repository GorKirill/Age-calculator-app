const dateBirthDay=document.querySelector("#input_day"),dateBirthMonth=document.querySelector("#input_month"),dateBirthYear=document.querySelector("#input_year"),button=document.querySelector(".image__circle"),ageYear=document.querySelector("#age_year"),ageMonth=document.querySelector("#age_month"),ageDay=document.querySelector("#age_day"),regExNumber=/^[\d]+$/,shortMonth=["4","6","9","11"],theBirthdayItself=1,nowDate=new Date;function errorDisplay(e,t){element=document.querySelector(e),element.textContent=t}function croppingValues(e){const t=e.value.substring(0,e.value.length-1);e.value=t}function resetCalculations(){ageDay.textContent="- -",ageMonth.textContent="- -",ageYear.textContent="- -"}function isLeapYear(e){return e%4==0&&(e%100!=0||e%400==0)}function checkDate(){dateBirthDay.value>31||31==dateBirthDay.value&&shortMonth.includes(dateBirthMonth.value)||dateBirthDay.value>29&&2==dateBirthMonth.value||dateBirthDay.value>28&&2==dateBirthMonth.value&&!isLeapYear(dateBirthYear.value)?(errorDisplay(".error-day","Must be valid day"),resetCalculations()):dateBirthYear.value==nowDate.getFullYear()&&dateBirthMonth.value==nowDate.getMonth()+1&&dateBirthDay.value>nowDate.getDate()?(errorDisplay(".error-day","Must be in the past"),resetCalculations()):dateBirthMonth.value>12?(errorDisplay(".error-month","Must be a valid month"),resetCalculations()):dateBirthYear.value==nowDate.getFullYear()&&dateBirthMonth.value>nowDate.getMonth()+1?(errorDisplay(".error-month","Must be in the past"),resetCalculations()):dateBirthYear.value>nowDate.getFullYear()?(errorDisplay(".error-year","Must be in the past"),resetCalculations()):(errorDisplay(".error-year",""),errorDisplay(".error-month",""),errorDisplay(".error-day",""))}function ageCalculation(e){let t=nowDate.getFullYear()-e.getFullYear();if(nowDate.getMonth()<e.getMonth()||nowDate.getMonth()==e.getMonth()&&nowDate.getDate()<e.getDate()?(t--,ageYear.textContent=t):ageYear.textContent=t,nowDate.getFullYear()>=e.getFullYear()&&nowDate.getMonth()>=e.getMonth()&&nowDate.getDate()>=e.getDate()){let t=nowDate.getMonth()-e.getMonth();ageMonth.textContent=t}else if(nowDate.getFullYear()>=e.getFullYear()&&nowDate.getMonth()>=e.getMonth()&&nowDate.getDate()<e.getDate()){let t=nowDate.getMonth()-e.getMonth()-1;ageMonth.textContent=t}else if(nowDate.getFullYear()>=e.getFullYear()&&nowDate.getMonth()<e.getMonth()&&nowDate.getDate()>=e.getDate()){let t=12-e.getMonth()+nowDate.getMonth();ageMonth.textContent=t}else{let t=11-e.getMonth()+nowDate.getMonth();ageMonth.textContent=t}if(nowDate.getDate()>=e.getDate()){let t=nowDate.getDate()-e.getDate()+1;ageDay.textContent=t}else if(shortMonth.includes(dateBirthMonth.value)){let t=nowDate.getDate()+30-e.getDate()+1;ageDay.textContent=t}else if(2!=dateBirthMonth.value||isLeapYear(dateBirthYear.value))if(2==dateBirthMonth.value&&isLeapYear(dateBirthYear.value)){let t=nowDate.getDate()+29-e.getDate()+1;ageDay.textContent=t}else{let t=nowDate.getDate()+31-e.getDate()+1;ageDay.textContent=t}else{let t=nowDate.getDate()+28-e.getDate()+1;ageDay.textContent=t}}dateBirthDay.addEventListener("input",(()=>{dateBirthDay.value.length>2?croppingValues(dateBirthDay):checkDate()})),dateBirthMonth.addEventListener("input",(()=>{dateBirthMonth.value.length>2?croppingValues(dateBirthMonth):checkDate()})),dateBirthYear.addEventListener("input",(()=>{dateBirthYear.value.length>4?croppingValues(dateBirthYear):checkDate()})),button.addEventListener("click",(()=>{const e=new Date(dateBirthYear.value,dateBirthMonth.value-1,dateBirthDay.value);regExNumber.test(dateBirthDay.value)?regExNumber.test(dateBirthMonth.value)?regExNumber.test(dateBirthYear.value)?dateBirthYear.value<100?(errorDisplay(".error-year","The year must exceed 99"),resetCalculations()):(ageCalculation(e),checkDate()):errorDisplay(".error-year","Only number"):errorDisplay(".error-month","Only number"):errorDisplay(".error-day","Only number")}));